@namespace SedekahKita.Web.Pages.Master
@page "/master/user-profile"
@using SedekahKita.Web.Models
@using SedekahKita.Web.Services
@inject IJSRuntime jsRuntime
@inject NavigationManager NavMgr
@inject IToastService toastService

@using SedekahKita.Web.Pages.Common

<div class="form-simple">
    <h2>PROFIL SAYA</h2>
    <div class="form">
        <div class="form-group">
            <label>Nama Lengkap</label>
            <input @bind="DataUser.FullName" type="text" name="nama" placeholder="Masukan Nama Lengkap">
        </div>
        <div class="form-group">
            <label>No HP</label>
            <input type="text" @bind="DataUser.Phone" name="nohp" placeholder="Masukan No. HP">
        </div>

        <div class="form-group">
            <label>Alamat</label>
            <input type="text" @bind="DataUser.Alamat" name="alamat" placeholder="Masukan Alamat">
        </div>
        <div class="form-group">
            <label>Password</label>
            <input type="password" @bind="DataUser.Password" name="password">
            <button class="toggle" tabindex="-1"><i class="bi bi-eye"></i><i class="bi bi-eye-slash"></i></button>
        </div>
        <div class="form-group">
            <label>Ulangi Password</label>
            <input type="password" @bind="RetypePass" name="passwordconfirm">
            <button class="toggle" tabindex="-1"><i class="bi bi-eye"></i><i class="bi bi-eye-slash"></i></button>
        </div>
        <br>
        <div class="form-button">
            <button class="primary" @onclick="Simpan">SIMPAN</button>
        </div>
    </div>
</div>

@code {
    UserProfile DataUser = new UserProfile();
    UserProfileService service;
    string RetypePass;
    string ErrorMsg = string.Empty;
    bool RegisterSuccess = false;
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    string UserName;

    protected override async Task OnInitializedAsync()
    {

        if (service == null) service = new UserProfileService();
        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            UserName = user.Identity.Name;
            DataUser = service.GetItemByEmail(UserName);
        }


    }
    void Simpan()
    {
        ErrorMsg = "";


        if (string.IsNullOrEmpty(DataUser.Password))
        {
            ErrorMsg += "Tolong di isi password. ";

        }
        if (string.IsNullOrEmpty(DataUser.Phone))
        {
            ErrorMsg += "Tolong di isi no hp. ";

        }
        if (string.IsNullOrEmpty(DataUser.FullName))
        {
            ErrorMsg += "Tolong di isi nama lengkap. ";

        }
        if (string.IsNullOrEmpty(DataUser.Alamat))
        {
            ErrorMsg += "Tolong di isi alamat. ";

        }
        if (DataUser.Password != RetypePass)
        {
            ErrorMsg += "Password tidak sesuai dengan ulang password. ";

        }

        if (ErrorMsg.Length > 0)
        {
            toastService.ShowWarning(ErrorMsg, "Perhatian");
            return;
        }

        DataUser.Email = DataUser.Username;

        if (service.UpdateData(DataUser))
        {
            toastService.ShowSuccess("Profile Anda sudah berhasil di update. Ajkhr", "Info");
        }
    }

    void Kembali()
    {
        NavMgr.NavigateTo("/");
    }
}
