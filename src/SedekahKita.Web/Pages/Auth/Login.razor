@layout NoAuthLayout
@page "/auth/login"

@using System.Web;
@using Microsoft.AspNetCore.WebUtilities
@inject IJSRuntime jsRuntime
@inject IToastService toastService
@inject NavigationManager NavMgr
<AuthorizeView>
    <Authorized>
        <b>Hello, @context.User.Identity.Name!</b>
        <a class="ml-md-auto btn btn-primary"
           href="/logout?returnUrl=/"
           target="_top">Logout</a>
    </Authorized>
    <NotAuthorized>
        <div class="left">
            <div class="form-section">
                <div class="logo">
                    <img src="assets/img/logo.png" srcset="assets/img/logo.png 1x, assets/img/logo@2x.png 2x" alt="Sedekah Kita">
                </div>
                <div class="form-center">
                    <div class="form">
                        <h2>LOGIN KE AKUN ANDA</h2>
                        <br>
                        <div class="form-group">
                            <label>Email Anda</label>
                            <input type="email" @bind="@Username" name="email">
                        </div>
                        <div class="form-group">
                            <label>Password Anda</label>
                            <input @bind="@Password" type="password" @onkeyup="@KeyUp" name="password">
                            <button class="toggle" tabindex="-1"><i class="bi bi-eye"></i><i class="bi bi-eye-slash"></i></button>
                        </div>
                        <br>
                        <div class="flex">
                            <label class="checkbox">
                                <input type="checkbox">
                                <span>Ingat Saya</span>
                            </label>
                            <a href="/auth/forgot-password" class="flright">Lupa Password</a>
                        </div>
                        <div class="form-button">
                            <button @onclick="LoginNow" class="primary">LOGIN</button>
                        </div>
                        <div class="form-group">
                            Belum punya akun? <a href="" @onclick:preventDefault @onclick="DaftarNow">Daftar disini</a>
                        </div>
                        @if (showError)
                        {
                        <div class="alert alert-warning">
                            username/password salah atau tidak terdaftar
                        </div>
                        }
                    </div>
                </div>

            </div>
        </div>
        <div class="right banner-note">
            <div class="banner-outer">
                <div class="banner-inner">
                    <h2>“Sesungguhnya sedekah itu memadamkan panasnya alam kubur bagi pelakunya. Dan sungguh, pada hari Kiamat, seorang mukmin akan bernaung di bawah naungan sedekahnya."</h2>
                    <div class="banner-footer">
                        <div class="footnote">Hasan: HR. Ath-Thabrani dalam al-Mu’jamul Kabiir (XVII/286, no. 788) dari ‘Uqbah bin ‘Amir Radhiyallahu anhu. Silsilah al-Ahaadiits ash-Shahiihah (no. 3484).</div>
                        <img src="assets/img/img02.png" alt="">
                    </div>
                </div>
            </div>
        </div>






    </NotAuthorized>
</AuthorizeView>


@code {
    bool showError = false;
    string Username = "";
    string Password = "";
    void KeyUp(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            LoginNow();
            //Console.WriteLine(this.Value);
        }
    }
    private string encode(string param)
    {
        return HttpUtility.UrlEncode(param);
    }
    async Task DaftarNow()
    {
        NavMgr.NavigateTo("/auth/register");
    }
    async Task LoginNow()
    {
        var ErrMsg = "";
        if (string.IsNullOrEmpty(Username))
        {
            ErrMsg += "Tolong isi username.";
        }
        if (string.IsNullOrEmpty(Password))
        {
            ErrMsg += "Tolong isi password.";
        }
        if (ErrMsg.Length > 0)
        {
            toastService.ShowError(ErrMsg, "Perhatian");
        }
        else
        {
            string logUrl = $"/login?paramUsername={encode(Username)}&paramPassword={encode(Password)}";
            await jsRuntime.InvokeAsync<object>("OpenUrl", logUrl);
        }
        //NavMgr.NavigateTo(logUrl);
    }
    protected override async Task OnInitializedAsync()
    {
        var uri = NavMgr.ToAbsoluteUri(NavMgr.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("result", out var resultString))
        {
            var result = bool.Parse(resultString);
            if (!result)
            {
                showError = true;
                toastService.ShowWarning("username/password salah atau tidak terdaftar", "Perhatian");
            }
        }
    }
}