@layout NoAuthLayout
@page "/auth/register"
@using SedekahKita.Web.Models
@using SedekahKita.Web.Services
@inject NavigationManager NavMgr
@inject IToastService toastService
@using SedekahKita.Tools
@using SedekahKita.Web.Helpers
@if (RegisterSuccess)
{

    <div class="alert alert-success">Akun berhasil dibuat, silakan <a href="/auth/login">Masuk</a>.</div>

}
else
{
    <h1>Daftar ke Sedekah Kita</h1>
    <p>Silakan di isi data diri dibawah, terima kasih</p>
    <hr>
    <div>
        <div class="form-group">
            <label for="fullname"><b>Nama Lengkap</b></label>
            <input @bind="DataUser.FullName" type="text" class="form-control" placeholder="Masukan Nama Lengkap" name="fullname">
        </div>
        <div class="form-group">
            <label for="phone"><b>Telepon</b></label>
            <input @bind="DataUser.Phone" type="text" class="form-control" placeholder="Masukan No. HP" name="phone">
        </div>
        <div class="form-group">
            <label for="email"><b>Email</b></label>
            <input @bind="DataUser.Username" class="form-control" type="text" placeholder="Masukan Email" name="email">
        </div>
        <div class="form-group">
            <label for="alamat"><b>Alamat</b></label>
            <input @bind="DataUser.Alamat" class="form-control" type="text" placeholder="Masukan Alamat" name="alamat">
        </div>
        <div class="form-group">
            <label for="psw"><b>Password</b></label>
            <input @bind="DataUser.Password" class="form-control" type="password" placeholder="Masukan Password" name="psw">
        </div>
        <div class="form-group">
            <label for="psw-repeat"><b>Ulang Password</b></label>
            <input @bind="RetypePass" type="password" class="form-control" placeholder="Repeat Password" name="psw-repeat">
        </div>
        <div class="input captcha">
            <img src="@CaptchaImage" style="padding-right: unset;">
            <a @onclick="GenerateCaptcha" class="icon reload" title="Reload captcha"></a>
            <input @bind="TypedCaptcha" type="text" placeholder="Retype captcha" required>
        </div>
        <button @onclick="DaftarUser" class="btn btn-success">Daftar</button>
        <button @onclick="Kembali" class="btn btn-primary">Kembali ke Login</button>

    </div>
}

@code {
    public string CaptchaImage { get; set; }
    public string Answer { get; set; }
    public string TypedCaptcha { get; set; }
    UserProfile DataUser = new UserProfile();
    string RetypePass;
    string ErrorMsg = string.Empty;
    bool RegisterSuccess = false;

    void GenerateCaptcha()
    {
        Random oRandom = new Random();
        int iNumber = oRandom.Next(1000, 9999);
        Answer = iNumber.ToString();
        var temp = CaptchaGenerator.GetCaptcha(Answer, 158, 70);
        string base64String = Convert.ToBase64String(temp, 0, temp.Length);
        CaptchaImage = "data:image/png;base64," + base64String;
    }

    async Task Kembali()
    {
        NavMgr.NavigateTo("/auth/login");
    }
    void DaftarUser()
    {
        ErrorMsg = "";
        UserProfileService svc = new UserProfileService();
        if (string.IsNullOrEmpty(DataUser.Username))
        {
            ErrorMsg += "Tolong di isi email. ";

        }
        if (!SedekahKita.Tools.FormValidation.IsValidEmail(DataUser.Username))
        {
            ErrorMsg += "Format email tidak valid";

        }
        if (string.IsNullOrEmpty(DataUser.Password))
        {
            ErrorMsg += "Tolong di isi password. ";

        }
        if (string.IsNullOrEmpty(DataUser.Phone))
        {
            ErrorMsg += "Tolong di isi no hp. ";

        }
        if (string.IsNullOrEmpty(DataUser.FullName))
        {
            ErrorMsg += "Tolong di isi nama lengkap. ";

        }
        if (string.IsNullOrEmpty(DataUser.Alamat))
        {
            ErrorMsg += "Tolong di isi alamat. ";

        }
        if (DataUser.Password != RetypePass)
        {
            ErrorMsg += "Password tidak sesuai dengan ulang password. ";

        }
        if (svc.IsUserExists(DataUser.Username))
        {
            ErrorMsg += "User sudah terdaftar sebelumnya, gunakan email lain. ";

        }
        if (string.IsNullOrEmpty(TypedCaptcha))
        {
            ErrorMsg = "Ketik Captcha";
        }
        if (Answer != TypedCaptcha)
        {
            ErrorMsg = "Captcha tidak valid";
        }
        var res = PasswordCheck.GetPasswordStrength(RetypePass);
        var PassQuality = res.ToString();
        if ((int)res < 3)
        {
            ErrorMsg = "Your password is " + PassQuality + ", please use capital, special character, number";
        }
        if (ErrorMsg.Length > 0)
        {
            toastService.ShowWarning(ErrorMsg, "Perhatian");
            return;
        }

        DataUser.Email = DataUser.Username;

        if (svc.InsertData(DataUser))
        {
            RegisterSuccess = true;
            StateHasChanged();
        }
    }
    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(CaptchaImage))
            GenerateCaptcha();

    }
}
