@using SedekahKita.Web.Models
@using SedekahKita.Web.Data
@inject IJSRuntime jsRuntime
@namespace SedekahKita.Web.Pages.Master
@using SedekahKita.Web.Helpers
@using SedekahKita.Web.Services
@using System.IO
@inject IToastService toastService

<div class="modal" tabindex="-1" role="dialog" id="modalDetailBantuan">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@CustomHeader</h5>


                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form">
                    <EditForm Model="@TaskObject" OnValidSubmit="@HandleValidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary></ValidationSummary>
                        <div class="form-group">
                            <label for="nama">Pengirim</label>
                            <input type="hidden" @bind-value="@TaskObject.Id" />
                            <InputText id="nama" class="form-control" @bind-Value="@TaskObject.Pengirim" />
                            <ValidationMessage For="@(() => TaskObject.Pengirim)" />
                        </div>
                        <div class="form-group">
                            <label for="HpPengirim">Hp Pengirim</label>
                            <InputTextArea id="HpPengirim" class="form-control" @bind-Value="@TaskObject.HpPengirim" />
                            <ValidationMessage For="@(() => TaskObject.HpPengirim)" />
                        </div>
                        <div class="form-group">
                            <label for="AlamatPengirim">Alamat Pengirim</label>
                            <InputTextArea id="AlamatPengirim" class="form-control" @bind-Value="@TaskObject.AlamatPengirim" />
                            <ValidationMessage For="@(() => TaskObject.AlamatPengirim)" />
                        </div>
                        <div class="form-group">
                            <label for="ket">Keterangan</label>
                            <InputTextArea id="ket" class="form-control" @bind-Value="@TaskObject.Keterangan" />
                            <ValidationMessage For="@(() => TaskObject.Keterangan)" />
                        </div>

                        <div class="form-columns">
                            <div class="form-col">
                                <div class="form-group">
                                    <label>Jumlah</label>
                                    <InputNumber min="1" max="9999999999" id="jml" class="form-control" @bind-Value="@TaskObject.Jumlah" />
                                    <ValidationMessage For="@(() => TaskObject.Jumlah)" />
                                </div>
                            </div>
                            <div class="form-col">
                            </div>
                        </div>
                        <div class="form-columns">
                            <div class="form-col">
                                <div class="form-group">
                                    <label>Satuan</label>
                                    <select @bind="@TaskObject.Satuan">
                                        <option>Pilih</option>
                                        <option value="Ltr">Liter</option>
                                        <option value="Kg">Kilo</option>
                                        <option value="Pcs">Pcs</option>
                                        <option value="Paket">Paket</option>
                                        <option value="Rp">Rupiah</option>
                                        <option value="Box">Box</option>
                                        <option value="Ton">Ton</option>
                                        <option value="Bangunan">Bangunan</option>
                                        <option value="m">Meter</option>
                                    </select>
                                    <ValidationMessage For="@(() => TaskObject.Satuan)" />
                                </div>
                            </div>
                            <div class="form-col">
                                <div class="form-group">
                                    <label>Jenis</label>
                                    <select @bind="@TaskObject.Jenis">
                                        <option>Pilih</option>
                                        @foreach (var item in AppConstants.JenisBantuan)
                                        {
                                            <option value="@item.Value">@item.Key</option>
                                        }

                                    </select>
                                    <ValidationMessage For="@(() => TaskObject.Jenis)" />
                                </div>
                            </div>
                        </div>
                        <div class="form-columns">
                            <div class="form-col">
                                <div class="form-group">
                                    <label>Tanggal Kirim</label>
                                    <InputDate id="tglkirim" class="form-control" @bind-Value="@TaskObject.TanggalKirim" />
                                    <ValidationMessage For="@(() => TaskObject.TanggalKirim)" />
                                </div>
                            </div>
                            <div class="form-col">
                                <div class="form-group">
                                    <label>Tanggal Terima</label>
                                    <InputDate id="tglterima" class="form-control" @bind-Value="@TaskObject.TanggalTerima" />
                                    <ValidationMessage For="@(() => TaskObject.TanggalTerima)" />
                                </div>
                            </div>
                        </div>
                        <div class="form-columns">
                            <div class="form-col">
                                <div class="form-group">
                                    <label>Status</label>
                                    <select @bind="@TaskObject.Status">
                                        <option>Pilih</option>
                                        @foreach (var item in Enum.GetValues(typeof(StatusBantuan)).Cast<StatusBantuan>())
                                        {
                                            <option value="@item">@item.ToString()</option>
                                        }

                                    </select>
                                    <ValidationMessage For="@(() => TaskObject.Status)" />
                                </div>
                            </div>
                            <div class="form-col">
                            </div>
                        </div>
                        <div class="form-group">
                            <label>Upload Foto</label>
                            <div class="upload-box">
                                <div class="file">
                                    @if (!string.IsNullOrEmpty(FileUrl))
                                    {
                                        <img src="@FileUrl" alt="produk" width="250" />
                                    }
                                    <InputFile OnChange="HandleFileSelected" />
                                    <span>TAMBAH FOTO</span>
                                </div>
                            </div>
                            <div class="alert alert-warning">pilih gambar dan tunggu sampai gambar muncul</div>

                        </div>
                        <div class="fwdialog-buttons">
                            <div class="form-button">
                                <button type="submit" class="primary">Simpan</button>
                            </div>
                            <div class="form-button">
                                <button type="button" class="" data-dismiss="modal">Batal</button>
                            </div>
                        </div>
                    </EditForm>


                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public string FileUrl { get; set; }
    [Parameter]
    public RenderFragment CustomHeader { get; set; }
    [Parameter]
    public Bantuan TaskObject { get; set; }
    [Parameter]
    public Action DataChanged { get; set; }
    BantuanService service;
    public PenerimaBantuan parent { set; get; }


    protected override async Task OnInitializedAsync()
    {
        if (service == null) service = new BantuanService();
    }

    private async void HandleValidSubmit()
    {

        if (!string.IsNullOrEmpty(FileUrl))
            TaskObject.PhotoUrl = FileUrl;
        if (TaskObject.Id == 0)
        {


            service.InsertData(TaskObject);
            TaskObject.PenerimaBantuan = parent;
            service.UpdateData(TaskObject);

        }
        else
        {
            service.UpdateData(TaskObject);
        }

        await CloseTaskModal();
        DataChanged?.Invoke();
    }

    async Task HandleFileSelected(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file != null)
        {
            // Just load into .NET memory to show it can be done
            // Alternatively it could be saved to disk, or parsed in memory, or similar

            var ms = new MemoryStream();
            await file.Data.CopyToAsync(ms);
            var bytes = ImageResizer.ResizeImageAndRatio(ms, 640, 480, false);
            string newName = $"bantuan_{DateTime.Now.ToString("dd_MM_yyyy")}_{StringGenerator.RandomString(5)}{Path.GetExtension(file.Name)}";
            await AzureBlobHelper.UploadFile(newName, bytes);
            FileUrl = $"https://storagemurahaje.blob.core.windows.net/sedekah-kita/{newName}";
        }
    }

    private async Task CloseTaskModal()
    {
        await jsRuntime.InvokeAsync<object>("CloseModal", "modalDetailBantuan");
    }


}